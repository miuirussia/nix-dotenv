name: "Build environment"
on:
  push:
jobs:
  build:
    name: "build"
    runs-on: macos-latest
    steps:
    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DD HH:mm:ss
    - name: Checkout nix-dotenv
      uses: actions/checkout@v2
      with:
        path: environment
        fetch-depth: 0
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Install nix-cache-tools
      run: |
        nix-env -i -f ./environment/nixpkgs/nix-cache-tools
    - name: Add cachix kdevlab cache
      uses: cachix/cachix-action@v7
      with:
        name: kdevlab
        skipPush: true
    - name: Add iohk, kdevlab cache
      run: |
        mkdir -p ~/.config/nix
        touch ~/.config/nix/nix.conf
        echo "substituters = https://hydra.iohk.io https://nix-cache.s3.kdevlab.com" \
            >> ~/.config/nix/nix.conf
        echo "trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= s3.kdevlab.com:PhuKrzVfCsS0T1R4FnslJy2qUBul9oQ2CTSO/fg/llM=" \
            >> ~/.config/nix/nix.conf
    - name: Add cachix iohk cache
      uses: cachix/cachix-action@v7
      with:
        name: iohk
        skipPush: true
    - name: Show nix config
      run: cat ~/.config/nix/nix.conf
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Save pre-build state
      run: |
        nix path-info --all | grep -v '\.drv$' > /tmp/store-path-pre-build
      working-directory: environment
    - name: Checkout dotfiles
      uses: actions/checkout@v2
      with:
        path: dotfiles
        repository: miuirussia/dotfiles
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        persist-credentials: true
        fetch-depth: 0
    - name: Copy updated files
      run: |
        rm -rf ./dotfiles/nix/sources/*.patch || true
        rm -rf ./dotfiles/nix/programs/neovim/patches || true
        rm -rf ./dotfiles/nix/nix/nixpkgs/{vscode,jetbrains-mono,build-support} || true
        cp -f  ./environment/sources/{default.nix,sources.nix,sources.json,*.patch} ./dotfiles/nix/sources
        cp -rf ./environment/neovim/{custom-plugins.nix,patches} ./dotfiles/nix/programs/neovim
        cp -rf ./environment/nixpkgs/{mkHlsPkgs.nix,hls.nix,nix-cache-tools,package.nix,vscode,jetbrains-mono,build-support} ./dotfiles/nix/nixpkgs
        cp -f  ./environment/nixpkgs/nodePackages/{default.nix,node-env.nix,node-packages.json,node-packages.nix} ./dotfiles/nix/nixpkgs/nodePackages
    - name: Build home-manager
      run: |
        nix-env -f '<nixpkgs>' -iA home-manager
        cp -f ./nix/user{.example,}.nix
        export XDG_CONFIG_HOME=$(pwd)
        home-manager -f ./nix/home.nix build
      working-directory: dotfiles
    - name: Upload cache
      run: |
        comm -13 <(sort /tmp/store-path-pre-build) <(nix path-info --all | grep -v '\.drv$' | sort) | xargs -P8 upload-nix
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        NIX_UPLOAD_STORE_URL: 's3://nix-cache?endpoint=s3.kdevlab.com'
        NIX_UPLOAD_SECRET_KEY: ${{ secrets.CACHE_PRIVATE_KEY }}
      working-directory: environment
    - name: Commit updated files
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automatic sources update â€“ ${{ steps.current-time.outputs.formattedTime }}
        repository: dotfiles
    - name: Notify in telegram
      if: cancelled() == false
      uses: xinthink/action-telegram@v1.1
      with:
        chatId: ${{ secrets.TELEGRAM_BOT_CHANNEL }}
        botToken: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        jobStatus: ${{ job.status }}
        skipSuccess: false

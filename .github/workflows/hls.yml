name: 'Haskell Language Server'
on:
  push:
jobs:
  build:
    strategy:
      matrix:
        ghc: ['865', '884', '8102']
    name: "build - ghc${{ matrix.ghc }}"
    runs-on: macos-latest
    steps:
    - name: Checkout nix-dotenv
      uses: actions/checkout@v2
    - name: Install nix
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Install nix-cache-tools
      run: |
        nix-env -i -f ./nixpkgs/nix-cache-tools
    - name: Add cachix kdevlab cache
      uses: cachix/cachix-action@v7
      with:
        name: kdevlab
        skipPush: true
    - name: Add iohk, kdevlab cache
      run: |
        mkdir -p ~/.config/nix
        touch ~/.config/nix/nix.conf
        echo "substituters = https://hydra.iohk.io https://s3.kdevlab.com/nix-cache" \
            >> ~/.config/nix/nix.conf
        echo "trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= s3.kdevlab.com:PhuKrzVfCsS0T1R4FnslJy2qUBul9oQ2CTSO/fg/llM=" \
            >> ~/.config/nix/nix.conf
    - name: Add cachix iohk cache
      uses: cachix/cachix-action@v7
      with:
        name: iohk
        skipPush: true
    - name: Show nix config
      run: cat ~/.config/nix/nix.conf
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Build default.nix
      run: |
        nix path-info --all | grep -v '\.drv$' > /tmp/store-path-pre-build
        nix --print-build-logs build -f hls.nix --argstr "version" "${{ matrix.ghc }}"
    - name: Show builded paths
      run: |
        nix --print-build-logs path-info -f hls.nix --argstr "version" "${{ matrix.ghc }}"
    - name: Upload cache
      run: |
        comm -13 <(sort /tmp/store-path-pre-build) <(nix path-info --all | grep -v '\.drv$' | sort) | xargs -P8 upload-nix
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        NIX_UPLOAD_STORE_URL: 's3://nix-cache?endpoint=s3.kdevlab.com'
        NIX_UPLOAD_SECRET_KEY: ${{ secrets.CACHE_PRIVATE_KEY }}
    - name: Notify in telegram
      if: cancelled() == false
      uses: xinthink/action-telegram@v1.1
      with:
        chatId: ${{ secrets.TELEGRAM_BOT_CHANNEL }}
        botToken: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        jobStatus: ${{ job.status }}
        skipSuccess: false
